<!-- Modal -->
<div class="modal fade" id="editCollaboratorsModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Edit collaborators</h4>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-md-6 offset-md-2">
            <%= collection_select(:users, :user_id, User.where.not(id: @document.users.uniq), :id, :to_s, {},{:size => 6}) %>
          </div>
          <div class="col-md-6 offset-md-2" >
            <%= collection_select(:users, :collaborators_users_id, @document.users.uniq, :id, :to_s, {},{:size => 6}) %>
          </div>
        </div>
        <div class = "row">
          <div class = "col-md-6">
            <button type="button" onclick="addOrRemoveCollaborator('addCollaborator')" class="btn btn-primary">Add collaborator</button>
          </div>
          <div class = "col-md-6">
            <button type="button" onclick="addOrRemoveCollaborator('removeCollaborator')" class="btn btn-danger">Remove collaborator</button>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" onclick ="updateCollaborators(<%= @document.id %>)" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>

<h1>Editing Document</h1>
<%= form_for(@document) do |f| %>
  <% if @document.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@document.errors.count, "error") %> prohibited this @document from being saved:</h2>
      <ul>
      <% @document.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

   <%= f.label :title %>
  <div class="field">
    <%= f.text_field :title, :style => "width:573px" %>
  </div>
  <strong>Change Categories</strong>
  <div class="field">
    <%= f.collection_select(:categories, Category.all, :id, :title, {:selected => @document.categories.ids}, {:style => "width:573px", :multiple => true, :class => 'category_selector'}) %>
  </div>
  <strong>Current collaborators</strong>
  <div class="field">
    <%= f.collection_select(:users, User.where.not(id: @document.user.id), :id, :to_s, {:selected => @document.users.ids.uniq}, {:style => "width:573px", :multiple => true, :class => 'category_selector', :disabled => "disabled"}) %>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#editCollaboratorsModal">
      Edit collaborators
    </button>
  </div>
  <br>

	<div class = "row">
		<div class = "col-md-6 col-ms-12">
      <div class="panel panel-primary" >
        <div class = "panel-heading">
          <%= f.label :text %>
        </div>
        <div class="panel-body">
          <%= f.text_area :text, id: "text_to_edit",class: "col-md-12 col-ms-12 col-xs-12" %>
        </div>
      </div>
		</div>

    <div class = "hidden-xs hidden-sm col-md-6">
      <div class="panel panel-primary" >
        <div class = "panel-heading">
          <%= f.label :preview %>
        </div>
        <div class="panel-body">
          <div id='preview'>
            <p >
              <%= markdown(@document.text) %>
            </p>
          </div>
          <p id="real_time_preview" ></p>
        </div>
      </div>
    </div>
	</div>
<%= f.label :is_a_public_document %>
<% if @document.is_public? %>
  <%= f.check_box :is_public, {:checked => "checked"}, 'true', 'false' %>
<% else %>
  <%= f.check_box :is_public,{}, 'true', 'false' %>
<% end %>

  <div class="actions">
    <%= f.submit :class => "btn btn-success" %>
  </div>
<% end %>

<%= link_to 'Show', @document, class: "btn btn-primary", style: "color:white" %> |
<%= link_to 'Back', documents_path, class: "btn btn-danger", style: "color:white" %>

<script>

$('textarea').each(function () {
  this.setAttribute('style', 'height:' + (this.scrollHeight) + 'px;overflow-y:hidden; min-height:350px');
}).on('input', function () {
  this.style.height = 'auto';
  this.style.height = (this.scrollHeight) + 'px';
});

$(document).ready(function(){
  $(".category_selector").select2();

});

function updateCollaborators(document_id){
  var collaboratorsSelect = document.getElementById("users_collaborators_users_id").options;

  var collaboratorsIds = []
  for(idx = 0; idx < collaboratorsSelect.length; idx++){
    collaboratorsIds[idx] = collaboratorsSelect[idx].value;
  }

  var users = {
    users: collaboratorsIds,
    id: document_id
  }

  $.ajax({
        type: "POST",
        dataType: "json",
        url: "/collaborators",
        data: {
            document: users // < note use of 'this' here
        },
        success: function(json) {
          $('#editCollaboratorsModal').modal('toggle');
          location.reload();
          //document.getElementById("demo").className = "panel panel-primary";
          //document.getElementById("real_time_preview").innerHTML = json.text;
          //result = $.parseJSON(json);

        },
        error: function(json) {
            alert('error');
        }
    });

}

function addOrRemoveCollaborator(action) {

    var originSelect;
    var finalSelect;
    // Check if we need add the collaborator or remove.
    if(action == "addCollaborator"){
      originSelect= document.getElementById("users_user_id");
      finalSelect = document.getElementById("users_collaborators_users_id");
    }
    else{
      // Remove collaborator.
      originSelect= document.getElementById("users_collaborators_users_id");
      finalSelect = document.getElementById("users_user_id");
    }

    // Check if we have something select.
    var userId = originSelect.value;
    if (userId != ""){
      // Get the user info.
      var currentIndex = originSelect.selectedIndex;
      var userName = originSelect.options[currentIndex].text;

      // Add the user to the finalSelect.
      var newOption = document.createElement("option");
      newOption.text = userName;
      newOption.value = userId;
      finalSelect.options.add(newOption, 1);

      // Delete the user to the originSelect.
      originSelect.options.remove(currentIndex);
    }

}

$("#text_to_edit").keyup(function() {
	var rc_to_send = document.getElementById ( "text_to_edit" ).value;
	if (document.contains(document.getElementById("preview"))) {
            document.getElementById("preview").remove();
	}
    $.ajax({
        type: "GET",
        dataType: "json",
        url: "/test",
        data: {
            rc_text: rc_to_send // < note use of 'this' here
        },
        success: function(json) {
          //document.getElementById("demo").className = "panel panel-primary";
        	document.getElementById("real_time_preview").innerHTML = json.text;
        	//result = $.parseJSON(json);

        },
        error: function(json) {
            alert('error');
        }
    });
});
</script>
